!function(){function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_toPropertyKey(n.key),n)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var r=function(e,r){if("object"!=_typeof(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,r||"default");if("object"!=_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(e,"string");return"symbol"==_typeof(r)?r:r+""}System.register(["./vendor_react-legacy-CLfW4jtq.js","./vendor_react-dom-legacy-C9cBAljE.js","./vendor-legacy-kNyh-mIs.js"],function(e,r){"use strict";var t,n;return{setters:[function(e){t=e.a,n=e.j},null,null],execute:function(){e("default",function(e){var r=e.SIM_RESOLUTION,i=void 0===r?128:r,o=e.DYE_RESOLUTION,a=void 0===o?1440:o,u=e.CAPTURE_RESOLUTION,c=void 0===u?512:u,l=e.DENSITY_DISSIPATION,v=void 0===l?3.5:l,f=e.VELOCITY_DISSIPATION,s=void 0===f?2:f,m=e.PRESSURE,d=void 0===m?.1:m,h=e.PRESSURE_ITERATIONS,g=void 0===h?20:h,p=e.CURL,x=void 0===p?3:p,T=e.SPLAT_RADIUS,R=void 0===T?.2:T,E=e.SPLAT_FORCE,S=void 0===E?6e3:E,y=e.SHADING,D=void 0===y||y,_=e.COLOR_UPDATE_SPEED,F=void 0===_?10:_,A=e.BACK_COLOR,P=void 0===A?{r:.5,g:0,b:0}:A,b=e.TRANSPARENT,U=void 0===b||b,w=t.useRef(null);return t.useEffect(function(){var e=w.current;if(e){var r={SIM_RESOLUTION:i,DYE_RESOLUTION:a,DENSITY_DISSIPATION:v,VELOCITY_DISSIPATION:s,PRESSURE:d,PRESSURE_ITERATIONS:g,CURL:x,SPLAT_RADIUS:R,SPLAT_FORCE:S,SHADING:D,COLOR_UPDATE_SPEED:F},t=[new function(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[0,0,0]}],n=function(e){var r,t,n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},i=e.getContext("webgl2",n),o=!!i;o||(i=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));o?(i.getExtension("EXT_color_buffer_float"),t=i.getExtension("OES_texture_float_linear")):(r=i.getExtension("OES_texture_half_float"),t=i.getExtension("OES_texture_half_float_linear"));i.clearColor(0,0,0,1);var a,u,c,l=o?i.HALF_FLOAT:r&&r.HALF_FLOAT_OES;o?(a=getSupportedFormat(i,i.RGBA16F,i.RGBA,l),u=getSupportedFormat(i,i.RG16F,i.RG,l),c=getSupportedFormat(i,i.R16F,i.RED,l)):(a=getSupportedFormat(i,i.RGBA,i.RGBA,l),u=getSupportedFormat(i,i.RGBA,i.RGBA,l),c=getSupportedFormat(i,i.RGBA,i.RGBA,l));return{gl:i,ext:{formatRGBA:a,formatRG:u,formatR:c,halfFloatTexType:l,supportLinearFiltering:t}}}(e),o=n.gl,u=n.ext;u.supportLinearFiltering||(r.DYE_RESOLUTION=256,r.SHADING=!1);var c,l,f,m,h,p,T=function(){return _createClass(function Material(e,r){_classCallCheck(this,Material),this.vertexShader=e,this.fragmentShaderSource=r,this.programs=[],this.activeProgram=null,this.uniforms=[]},[{key:"setKeywords",value:function(e){for(var r=0,t=0;t<e.length;t++)r+=hashCode(e[t]);var n=this.programs[r];if(null==n){var i=compileShader(o.FRAGMENT_SHADER,this.fragmentShaderSource,e);n=createProgram(this.vertexShader,i),this.programs[r]=n}n!==this.activeProgram&&(this.uniforms=getUniforms(n),this.activeProgram=n)}},{key:"bind",value:function(){o.useProgram(this.activeProgram)}}])}(),E=function(){return _createClass(function Program(e,r){_classCallCheck(this,Program),this.uniforms={},this.program=createProgram(e,r),this.uniforms=getUniforms(this.program)},[{key:"bind",value:function(){o.useProgram(this.program)}}])}(),y=compileShader(o.VERTEX_SHADER,"\n        precision highp float;\n        attribute vec2 aPosition;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform vec2 texelSize;\n\n        void main () {\n            vUv = aPosition * 0.5 + 0.5;\n            vL = vUv - vec2(texelSize.x, 0.0);\n            vR = vUv + vec2(texelSize.x, 0.0);\n            vT = vUv + vec2(0.0, texelSize.y);\n            vB = vUv - vec2(0.0, texelSize.y);\n            gl_Position = vec4(aPosition, 0.0, 1.0);\n        }\n      "),_=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n\n        void main () {\n            gl_FragColor = texture2D(uTexture, vUv);\n        }\n      "),A=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        uniform sampler2D uTexture;\n        uniform float value;\n\n        void main () {\n            gl_FragColor = value * texture2D(uTexture, vUv);\n        }\n     "),P=compileShader(o.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uTarget;\n        uniform float aspectRatio;\n        uniform vec3 color;\n        uniform vec2 point;\n        uniform float radius;\n\n        void main () {\n            vec2 p = vUv - point.xy;\n            p.x *= aspectRatio;\n            vec3 splat = exp(-dot(p, p) / radius) * color;\n            vec3 base = texture2D(uTarget, vUv).xyz;\n            gl_FragColor = vec4(base + splat, 1.0);\n        }\n      "),b=compileShader(o.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uSource;\n        uniform vec2 texelSize;\n        uniform vec2 dyeTexelSize;\n        uniform float dt;\n        uniform float dissipation;\n\n        vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n            vec2 st = uv / tsize - 0.5;\n            vec2 iuv = floor(st);\n            vec2 fuv = fract(st);\n\n            vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n            vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n            vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n            vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n            return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n        }\n\n        void main () {\n            #ifdef MANUAL_FILTERING\n                vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n                vec4 result = bilerp(uSource, coord, dyeTexelSize);\n            #else\n                vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n                vec4 result = texture2D(uSource, coord);\n            #endif\n            float decay = 1.0 + dissipation * dt;\n            gl_FragColor = result / decay;\n        }\n      ",u.supportLinearFiltering?null:["MANUAL_FILTERING"]),U=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).x;\n            float R = texture2D(uVelocity, vR).x;\n            float T = texture2D(uVelocity, vT).y;\n            float B = texture2D(uVelocity, vB).y;\n\n            vec2 C = texture2D(uVelocity, vUv).xy;\n            if (vL.x < 0.0) { L = -C.x; }\n            if (vR.x > 1.0) { R = -C.x; }\n            if (vT.y > 1.0) { T = -C.y; }\n            if (vB.y < 0.0) { B = -C.y; }\n\n            float div = 0.5 * (R - L + T - B);\n            gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n        }\n      "),B=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uVelocity, vL).y;\n            float R = texture2D(uVelocity, vR).y;\n            float T = texture2D(uVelocity, vT).x;\n            float B = texture2D(uVelocity, vB).x;\n            float vorticity = R - L - T + B;\n            gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n        }\n      "),L=compileShader(o.FRAGMENT_SHADER,"\n        precision highp float;\n        precision highp sampler2D;\n        varying vec2 vUv;\n        varying vec2 vL;\n        varying vec2 vR;\n        varying vec2 vT;\n        varying vec2 vB;\n        uniform sampler2D uVelocity;\n        uniform sampler2D uCurl;\n        uniform float curl;\n        uniform float dt;\n\n        void main () {\n            float L = texture2D(uCurl, vL).x;\n            float R = texture2D(uCurl, vR).x;\n            float T = texture2D(uCurl, vT).x;\n            float B = texture2D(uCurl, vB).x;\n            float C = texture2D(uCurl, vUv).x;\n\n            vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n            force /= length(force) + 0.0001;\n            force *= curl * C;\n            force.y *= -1.0;\n\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity += force * dt;\n            velocity = min(max(velocity, -1000.0), 1000.0);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),O=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uDivergence;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            float C = texture2D(uPressure, vUv).x;\n            float divergence = texture2D(uDivergence, vUv).x;\n            float pressure = (L + R + B + T - divergence) * 0.25;\n            gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n        }\n      "),C=compileShader(o.FRAGMENT_SHADER,"\n        precision mediump float;\n        precision mediump sampler2D;\n        varying highp vec2 vUv;\n        varying highp vec2 vL;\n        varying highp vec2 vR;\n        varying highp vec2 vT;\n        varying highp vec2 vB;\n        uniform sampler2D uPressure;\n        uniform sampler2D uVelocity;\n\n        void main () {\n            float L = texture2D(uPressure, vL).x;\n            float R = texture2D(uPressure, vR).x;\n            float T = texture2D(uPressure, vT).x;\n            float B = texture2D(uPressure, vB).x;\n            vec2 velocity = texture2D(uVelocity, vUv).xy;\n            velocity.xy -= vec2(R - L, T - B);\n            gl_FragColor = vec4(velocity, 0.0, 1.0);\n        }\n      "),I=(o.bindBuffer(o.ARRAY_BUFFER,o.createBuffer()),o.bufferData(o.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),o.STATIC_DRAW),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,o.createBuffer()),o.bufferData(o.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),o.STATIC_DRAW),o.vertexAttribPointer(0,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(0),function(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];null==e?(o.viewport(0,0,o.drawingBufferWidth,o.drawingBufferHeight),o.bindFramebuffer(o.FRAMEBUFFER,null)):(o.viewport(0,0,e.width,e.height),o.bindFramebuffer(o.FRAMEBUFFER,e.fbo)),r&&(o.clearColor(0,0,0,1),o.clear(o.COLOR_BUFFER_BIT)),o.drawElements(o.TRIANGLES,6,o.UNSIGNED_SHORT,0)}),N=new E(y,_),X=new E(y,A),M=new E(y,P),z=new E(y,b),Y=new E(y,U),G=new E(y,B),V=new E(y,L),H=new E(y,O),k=new E(y,C),W=new T(y,"\n      precision highp float;\n      precision highp sampler2D;\n      varying vec2 vUv;\n      varying vec2 vL;\n      varying vec2 vR;\n      varying vec2 vT;\n      varying vec2 vB;\n      uniform sampler2D uTexture;\n      uniform sampler2D uDithering;\n      uniform vec2 ditherScale;\n      uniform vec2 texelSize;\n\n      vec3 linearToGamma (vec3 color) {\n          color = max(color, vec3(0));\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n      }\n\n      void main () {\n          vec3 c = texture2D(uTexture, vUv).rgb;\n          #ifdef SHADING\n              vec3 lc = texture2D(uTexture, vL).rgb;\n              vec3 rc = texture2D(uTexture, vR).rgb;\n              vec3 tc = texture2D(uTexture, vT).rgb;\n              vec3 bc = texture2D(uTexture, vB).rgb;\n\n              float dx = length(rc) - length(lc);\n              float dy = length(tc) - length(bc);\n\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n              vec3 l = vec3(0.0, 0.0, 1.0);\n\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n              c *= diffuse;\n          #endif\n\n          float a = max(c.r, max(c.g, c.b));\n          gl_FragColor = vec4(c, a);\n      }\n    ");p=[],r.SHADING&&p.push("SHADING"),W.setKeywords(p),initFramebuffers();var j=Date.now(),K=0;window.addEventListener("mousedown",function(e){var r=t[0];updatePointerDownData(r,-1,scaleByPixelRatio(e.clientX),scaleByPixelRatio(e.clientY)),function(e){var r=generateColor();r.r*=10,r.g*=10,r.b*=10;var t=10*(Math.random()-.5),n=30*(Math.random()-.5);splat(e.texcoordX,e.texcoordY,t,n,r)}(r)}),document.body.addEventListener("mousemove",function handleFirstMouseMove(e){var r=t[0],n=scaleByPixelRatio(e.clientX),i=scaleByPixelRatio(e.clientY),o=generateColor();updateFrame(),updatePointerMoveData(r,n,i,o),document.body.removeEventListener("mousemove",handleFirstMouseMove)}),window.addEventListener("mousemove",function(e){var r=t[0];updatePointerMoveData(r,scaleByPixelRatio(e.clientX),scaleByPixelRatio(e.clientY),r.color)}),document.body.addEventListener("touchstart",function handleFirstTouchStart(e){for(var r=e.targetTouches,n=t[0],i=0;i<r.length;i++){var o=scaleByPixelRatio(r[i].clientX),a=scaleByPixelRatio(r[i].clientY);updateFrame(),updatePointerDownData(n,r[i].identifier,o,a)}document.body.removeEventListener("touchstart",handleFirstTouchStart)}),window.addEventListener("touchstart",function(e){for(var r=e.targetTouches,n=t[0],i=0;i<r.length;i++){var o=scaleByPixelRatio(r[i].clientX),a=scaleByPixelRatio(r[i].clientY);updatePointerDownData(n,r[i].identifier,o,a)}}),window.addEventListener("touchmove",function(e){for(var r=e.targetTouches,n=t[0],i=0;i<r.length;i++){updatePointerMoveData(n,scaleByPixelRatio(r[i].clientX),scaleByPixelRatio(r[i].clientY),n.color)}},!1),window.addEventListener("touchend",function(e){for(var r=e.changedTouches,n=t[0],i=0;i<r.length;i++)updatePointerUpData(n)}),updateFrame()}function getSupportedFormat(e,r,t,n){if(!function(e,r,t,n){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,r,4,4,0,t,n,null);var o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER);return a===e.FRAMEBUFFER_COMPLETE}(e,r,t,n))switch(r){case e.R16F:return getSupportedFormat(e,e.RG16F,e.RG,n);case e.RG16F:return getSupportedFormat(e,e.RGBA16F,e.RGBA,n);default:return null}return{internalFormat:r,format:t}}function createProgram(e,r){var t=o.createProgram();return o.attachShader(t,e),o.attachShader(t,r),o.linkProgram(t),o.getProgramParameter(t,o.LINK_STATUS),t}function getUniforms(e){for(var r=[],t=o.getProgramParameter(e,o.ACTIVE_UNIFORMS),n=0;n<t;n++){var i=o.getActiveUniform(e,n).name;r[i]=o.getUniformLocation(e,i)}return r}function compileShader(e,r,t){r=function(e,r){if(!r)return e;var t="";return r.forEach(function(e){t+="#define "+e+"\n"}),t+e}(r,t);var n=o.createShader(e);return o.shaderSource(n,r),o.compileShader(n),o.getShaderParameter(n,o.COMPILE_STATUS),n}function initFramebuffers(){var e=getResolution(r.SIM_RESOLUTION),t=getResolution(r.DYE_RESOLUTION),n=u.halfFloatTexType,i=u.formatRGBA,a=u.formatRG,v=u.formatR,s=u.supportLinearFiltering?o.LINEAR:o.NEAREST;o.disable(o.BLEND),c=c?resizeDoubleFBO(c,t.width,t.height,i.internalFormat,i.format,n,s):createDoubleFBO(t.width,t.height,i.internalFormat,i.format,n,s),l=l?resizeDoubleFBO(l,e.width,e.height,a.internalFormat,a.format,n,s):createDoubleFBO(e.width,e.height,a.internalFormat,a.format,n,s),f=createFBO(e.width,e.height,v.internalFormat,v.format,n,o.NEAREST),m=createFBO(e.width,e.height,v.internalFormat,v.format,n,o.NEAREST),h=createDoubleFBO(e.width,e.height,v.internalFormat,v.format,n,o.NEAREST)}function createFBO(e,r,t,n,i,a){o.activeTexture(o.TEXTURE0);var u=o.createTexture();o.bindTexture(o.TEXTURE_2D,u),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texImage2D(o.TEXTURE_2D,0,t,e,r,0,n,i,null);var c=o.createFramebuffer();return o.bindFramebuffer(o.FRAMEBUFFER,c),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,u,0),o.viewport(0,0,e,r),o.clear(o.COLOR_BUFFER_BIT),{texture:u,fbo:c,width:e,height:r,texelSizeX:1/e,texelSizeY:1/r,attach:function(e){return o.activeTexture(o.TEXTURE0+e),o.bindTexture(o.TEXTURE_2D,u),e}}}function createDoubleFBO(e,r,t,n,i,o){var a=createFBO(e,r,t,n,i,o),u=createFBO(e,r,t,n,i,o);return{width:e,height:r,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function resizeDoubleFBO(e,r,t,n,i,a,u){return e.width===r&&e.height===t||(e.read=function(e,r,t,n,i,a,u){var c=createFBO(r,t,n,i,a,u);return N.bind(),o.uniform1i(N.uniforms.uTexture,e.attach(0)),I(c),c}(e.read,r,t,n,i,a,u),e.write=createFBO(r,t,n,i,a,u),e.width=r,e.height=t,e.texelSizeX=1/r,e.texelSizeY=1/t),e}function updateFrame(){var n,i=function(){var e=Date.now(),r=(e-j)/1e3;return r=Math.min(r,.016666),j=e,r}();(function(){var r=scaleByPixelRatio(e.clientWidth),t=scaleByPixelRatio(e.clientHeight);if(e.width!==r||e.height!==t)return e.width=r,e.height=t,!0;return!1})()&&initFramebuffers(),function(e){K+=e*r.COLOR_UPDATE_SPEED,K>=1&&(K=(K-(n=0))%(1-n)+n,t.forEach(function(e){e.color=generateColor()}));var n}(i),t.forEach(function(e){var t,n,i;e.moved&&(e.moved=!1,n=(t=e).deltaX*r.SPLAT_FORCE,i=t.deltaY*r.SPLAT_FORCE,splat(t.texcoordX,t.texcoordY,n,i,t.color))}),function(e){o.disable(o.BLEND),G.bind(),o.uniform2f(G.uniforms.texelSize,l.texelSizeX,l.texelSizeY),o.uniform1i(G.uniforms.uVelocity,l.read.attach(0)),I(m),V.bind(),o.uniform2f(V.uniforms.texelSize,l.texelSizeX,l.texelSizeY),o.uniform1i(V.uniforms.uVelocity,l.read.attach(0)),o.uniform1i(V.uniforms.uCurl,m.attach(1)),o.uniform1f(V.uniforms.curl,r.CURL),o.uniform1f(V.uniforms.dt,e),I(l.write),l.swap(),Y.bind(),o.uniform2f(Y.uniforms.texelSize,l.texelSizeX,l.texelSizeY),o.uniform1i(Y.uniforms.uVelocity,l.read.attach(0)),I(f),X.bind(),o.uniform1i(X.uniforms.uTexture,h.read.attach(0)),o.uniform1f(X.uniforms.value,r.PRESSURE),I(h.write),h.swap(),H.bind(),o.uniform2f(H.uniforms.texelSize,l.texelSizeX,l.texelSizeY),o.uniform1i(H.uniforms.uDivergence,f.attach(0));for(var t=0;t<r.PRESSURE_ITERATIONS;t++)o.uniform1i(H.uniforms.uPressure,h.read.attach(1)),I(h.write),h.swap();k.bind(),o.uniform2f(k.uniforms.texelSize,l.texelSizeX,l.texelSizeY),o.uniform1i(k.uniforms.uPressure,h.read.attach(0)),o.uniform1i(k.uniforms.uVelocity,l.read.attach(1)),I(l.write),l.swap(),z.bind(),o.uniform2f(z.uniforms.texelSize,l.texelSizeX,l.texelSizeY),u.supportLinearFiltering||o.uniform2f(z.uniforms.dyeTexelSize,l.texelSizeX,l.texelSizeY);var n=l.read.attach(0);o.uniform1i(z.uniforms.uVelocity,n),o.uniform1i(z.uniforms.uSource,n),o.uniform1f(z.uniforms.dt,e),o.uniform1f(z.uniforms.dissipation,r.VELOCITY_DISSIPATION),I(l.write),l.swap(),u.supportLinearFiltering||o.uniform2f(z.uniforms.dyeTexelSize,c.texelSizeX,c.texelSizeY);o.uniform1i(z.uniforms.uVelocity,l.read.attach(0)),o.uniform1i(z.uniforms.uSource,c.read.attach(1)),o.uniform1f(z.uniforms.dissipation,r.DENSITY_DISSIPATION),I(c.write),c.swap()}(i),n=null,o.blendFunc(o.ONE,o.ONE_MINUS_SRC_ALPHA),o.enable(o.BLEND),function(e){var t=o.drawingBufferWidth,n=o.drawingBufferHeight;W.bind(),r.SHADING&&o.uniform2f(W.uniforms.texelSize,1/t,1/n),o.uniform1i(W.uniforms.uTexture,c.read.attach(0)),I(e)}(n),requestAnimationFrame(updateFrame)}function splat(t,n,i,a,u){M.bind(),o.uniform1i(M.uniforms.uTarget,l.read.attach(0)),o.uniform1f(M.uniforms.aspectRatio,e.width/e.height),o.uniform2f(M.uniforms.point,t,n),o.uniform3f(M.uniforms.color,i,a,0),o.uniform1f(M.uniforms.radius,function(r){var t=e.width/e.height;t>1&&(r*=t);return r}(r.SPLAT_RADIUS/100)),I(l.write),l.swap(),o.uniform1i(M.uniforms.uTarget,c.read.attach(0)),o.uniform3f(M.uniforms.color,u.r,u.g,u.b),I(c.write),c.swap()}function updatePointerDownData(r,t,n,i){r.id=t,r.down=!0,r.moved=!1,r.texcoordX=n/e.width,r.texcoordY=1-i/e.height,r.prevTexcoordX=r.texcoordX,r.prevTexcoordY=r.texcoordY,r.deltaX=0,r.deltaY=0,r.color=generateColor()}function updatePointerMoveData(r,t,n,i){r.prevTexcoordX=r.texcoordX,r.prevTexcoordY=r.texcoordY,r.texcoordX=t/e.width,r.texcoordY=1-n/e.height,r.deltaX=function(r){var t=e.width/e.height;t<1&&(r*=t);return r}(r.texcoordX-r.prevTexcoordX),r.deltaY=function(r){var t=e.width/e.height;t>1&&(r/=t);return r}(r.texcoordY-r.prevTexcoordY),r.moved=Math.abs(r.deltaX)>0||Math.abs(r.deltaY)>0,r.color=i}function updatePointerUpData(e){e.down=!1}function generateColor(){var e=function(e,r,t){var n,i,o,a,u,c,l,v;switch(a=Math.floor(6*e),c=t*(1-r),l=t*(1-(u=6*e-a)*r),v=t*(1-(1-u)*r),a%6){case 0:n=t,i=v,o=c;break;case 1:n=l,i=t,o=c;break;case 2:n=c,i=t,o=v;break;case 3:n=c,i=l,o=t;break;case 4:n=v,i=c,o=t;break;case 5:n=t,i=c,o=l}return{r:n,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function getResolution(e){var r=o.drawingBufferWidth/o.drawingBufferHeight;r<1&&(r=1/r);var t=Math.round(e),n=Math.round(e*r);return o.drawingBufferWidth>o.drawingBufferHeight?{width:n,height:t}:{width:t,height:n}}function scaleByPixelRatio(e){var r=window.devicePixelRatio||1;return Math.floor(e*r)}function hashCode(e){if(0===e.length)return 0;for(var r=0,t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;return r}},[i,a,c,v,s,d,g,x,R,S,D,F,P,U]),n.jsx("div",{className:"fixed top-0 left-0 z-50 pointer-events-none w-full h-full",children:n.jsx("canvas",{ref:w,id:"fluid",className:"w-screen h-screen block"})})})}}})}();
