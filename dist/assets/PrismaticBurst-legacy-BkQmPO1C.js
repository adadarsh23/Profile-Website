!function(){function _slicedToArray(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,u=[],l=!0,s=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(u.push(r.value),u.length!==e);l=!0);}catch(n){s=!0,a=n}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw a}}return u}}(n,e)||function(n,e){if(n){if("string"==typeof n)return _arrayLikeToArray(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}System.register(["./vendor_react-legacy-C2mTGldB.js","./vendor-legacy-BOUAOTBd.js"],function(n,e){"use strict";var t,r,a,o,i,u,l;return{setters:[function(n){t=n.r,r=n.j},function(n){a=n.aU,o=n.aY,i=n.aZ,u=n.b2,l=n.a_}],execute:function(){var hexToRgb01=function(n){var e=n.trim();if(e.startsWith("#")&&(e=e.slice(1)),3===e.length){var t=e[0],r=e[1],a=e[2];e=t+t+r+r+a+a}var o=parseInt(e,16);return isNaN(o)||6!==e.length&&8!==e.length?[1,1,1]:[(o>>16&255)/255,(o>>8&255)/255,(255&o)/255]},toPx=function(n){if(null==n)return 0;if("number"==typeof n)return n;var e=String(n).trim(),t=parseFloat(e.replace("px",""));return isNaN(t)?0:t};n("default",function(n){var e=n.intensity,s=void 0===e?2:e,c=n.speed,f=void 0===c?.5:c,v=n.animationType,m=void 0===v?"rotate3d":v,d=n.colors,h=n.distort,y=void 0===h?0:h,p=n.paused,g=void 0!==p&&p,x=n.offset,w=void 0===x?{x:0,y:0}:x,b=n.hoverDampness,A=void 0===b?0:b,M=n.rayCount,P=n.mixBlendMode,T=void 0===P?"lighten":P,R=t.useRef(null),C=t.useRef(null),E=t.useRef(null),L=t.useRef([.5,.5]),_=t.useRef([.5,.5]),N=t.useRef(g),z=t.useRef(null),I=t.useRef(A),O=t.useRef(!0),q=t.useRef(null),D=t.useRef(null);return t.useEffect(function(){N.current=g},[g]),t.useEffect(function(){I.current=A},[A]),t.useEffect(function(){var n=R.current;if(n){var e=Math.min(window.devicePixelRatio||1,2),t=new a({dpr:e,alpha:!1,antialias:!1});E.current=t;var r=t.gl;r.canvas.style.position="absolute",r.canvas.style.inset="0",r.canvas.style.width="100%",r.canvas.style.height="100%",r.canvas.style.mixBlendMode=T&&"none"!==T?T:"",n.appendChild(r.canvas);var s=new Uint8Array([255,255,255,255]),c=new o(r,{image:s,width:1,height:1,generateMipmaps:!1,flipY:!1});c.minFilter=r.LINEAR,c.magFilter=r.LINEAR,c.wrapS=r.CLAMP_TO_EDGE,c.wrapT=r.CLAMP_TO_EDGE,z.current=c;var f=new i(r,{vertex:"#version 300 es\nin vec2 position;\nin vec2 uv;\nout vec2 vUv;\nvoid main() {\n    vUv = uv;\n    gl_Position = vec4(position, 0.0, 1.0);\n}\n",fragment:"#version 300 es\nprecision highp float;\nprecision highp int;\n\nout vec4 fragColor;\n\nuniform vec2  uResolution;\nuniform float uTime;\n\nuniform float uIntensity;\nuniform float uSpeed;\nuniform int   uAnimType;\nuniform vec2  uMouse;\nuniform int   uColorCount;\nuniform float uDistort;\nuniform vec2  uOffset;\nuniform sampler2D uGradient;\nuniform float uNoiseAmount;\nuniform int   uRayCount;\n\nfloat hash21(vec2 p){\n    p = floor(p);\n    float f = 52.9829189 * fract(dot(p, vec2(0.065, 0.005)));\n    return fract(f);\n}\n\nmat2 rot30(){ return mat2(0.8, -0.5, 0.5, 0.8); }\n\nfloat layeredNoise(vec2 fragPx){\n    vec2 p = mod(fragPx + vec2(uTime * 30.0, -uTime * 21.0), 1024.0);\n    vec2 q = rot30() * p;\n    float n = 0.0;\n    n += 0.40 * hash21(q);\n    n += 0.25 * hash21(q * 2.0 + 17.0);\n    n += 0.20 * hash21(q * 4.0 + 47.0);\n    n += 0.10 * hash21(q * 8.0 + 113.0);\n    n += 0.05 * hash21(q * 16.0 + 191.0);\n    return n;\n}\n\nvec3 rayDir(vec2 frag, vec2 res, vec2 offset, float dist){\n    float focal = res.y * max(dist, 1e-3);\n    return normalize(vec3(2.0 * (frag - offset) - res, focal));\n}\n\nfloat edgeFade(vec2 frag, vec2 res, vec2 offset){\n    vec2 toC = frag - 0.5 * res - offset;\n    float r = length(toC) / (0.5 * min(res.x, res.y));\n    float x = clamp(r, 0.0, 1.0);\n    float q = x * x * x * (x * (x * 6.0 - 15.0) + 10.0);\n    float s = q * 0.5;\n    s = pow(s, 1.5);\n    float tail = 1.0 - pow(1.0 - s, 2.0);\n    s = mix(s, tail, 0.2);\n    float dn = (layeredNoise(frag * 0.15) - 0.5) * 0.0015 * s;\n    return clamp(s + dn, 0.0, 1.0);\n}\n\nmat3 rotX(float a){ float c = cos(a), s = sin(a); return mat3(1.0,0.0,0.0, 0.0,c,-s, 0.0,s,c); }\nmat3 rotY(float a){ float c = cos(a), s = sin(a); return mat3(c,0.0,s, 0.0,1.0,0.0, -s,0.0,c); }\nmat3 rotZ(float a){ float c = cos(a), s = sin(a); return mat3(c,-s,0.0, s,c,0.0, 0.0,0.0,1.0); }\n\nvec3 sampleGradient(float t){\n    t = clamp(t, 0.0, 1.0);\n    return texture(uGradient, vec2(t, 0.5)).rgb;\n}\n\nvec2 rot2(vec2 v, float a){\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c) * v;\n}\n\nfloat bendAngle(vec3 q, float t){\n    float a = 0.8 * sin(q.x * 0.55 + t * 0.6)\n            + 0.7 * sin(q.y * 0.50 - t * 0.5)\n            + 0.6 * sin(q.z * 0.60 + t * 0.7);\n    return a;\n}\n\nvoid main(){\n    vec2 frag = gl_FragCoord.xy;\n    float t = uTime * uSpeed;\n    float jitterAmp = 0.1 * clamp(uNoiseAmount, 0.0, 1.0);\n    vec3 dir = rayDir(frag, uResolution, uOffset, 1.0);\n    float marchT = 0.0;\n    vec3 col = vec3(0.0);\n    float n = layeredNoise(frag);\n    vec4 c = cos(t * 0.2 + vec4(0.0, 33.0, 11.0, 0.0));\n    mat2 M2 = mat2(c.x, c.y, c.z, c.w);\n    float amp = clamp(uDistort, 0.0, 50.0) * 0.15;\n\n    mat3 rot3dMat = mat3(1.0);\n    if(uAnimType == 1){\n      vec3 ang = vec3(t * 0.31, t * 0.21, t * 0.17);\n      rot3dMat = rotZ(ang.z) * rotY(ang.y) * rotX(ang.x);\n    }\n    mat3 hoverMat = mat3(1.0);\n    if(uAnimType == 2){\n      vec2 m = uMouse * 2.0 - 1.0;\n      vec3 ang = vec3(m.y * 0.6, m.x * 0.6, 0.0);\n      hoverMat = rotY(ang.y) * rotX(ang.x);\n    }\n\n    for (int i = 0; i < 44; ++i) {\n        vec3 P = marchT * dir;\n        P.z -= 2.0;\n        float rad = length(P);\n        vec3 Pl = P * (10.0 / max(rad, 1e-6));\n\n        if(uAnimType == 0){\n            Pl.xz *= M2;\n        } else if(uAnimType == 1){\n      Pl = rot3dMat * Pl;\n        } else {\n      Pl = hoverMat * Pl;\n        }\n\n        float stepLen = min(rad - 0.3, n * jitterAmp) + 0.1;\n\n        float grow = smoothstep(0.35, 3.0, marchT);\n        float a1 = amp * grow * bendAngle(Pl * 0.6, t);\n        float a2 = 0.5 * amp * grow * bendAngle(Pl.zyx * 0.5 + 3.1, t * 0.9);\n        vec3 Pb = Pl;\n        Pb.xz = rot2(Pb.xz, a1);\n        Pb.xy = rot2(Pb.xy, a2);\n\n        float rayPattern = smoothstep(\n            0.5, 0.7,\n            sin(Pb.x + cos(Pb.y) * cos(Pb.z)) *\n            sin(Pb.z + sin(Pb.y) * cos(Pb.x + t))\n        );\n\n        if (uRayCount > 0) {\n            float ang = atan(Pb.y, Pb.x);\n            float comb = 0.5 + 0.5 * cos(float(uRayCount) * ang);\n            comb = pow(comb, 3.0);\n            rayPattern *= smoothstep(0.15, 0.95, comb);\n        }\n\n        vec3 spectralDefault = 1.0 + vec3(\n            cos(marchT * 3.0 + 0.0),\n            cos(marchT * 3.0 + 1.0),\n            cos(marchT * 3.0 + 2.0)\n        );\n\n        float saw = fract(marchT * 0.25);\n        float tRay = saw * saw * (3.0 - 2.0 * saw);\n        vec3 userGradient = 2.0 * sampleGradient(tRay);\n        vec3 spectral = (uColorCount > 0) ? userGradient : spectralDefault;\n        vec3 base = (0.05 / (0.4 + stepLen))\n                  * smoothstep(5.0, 0.0, rad)\n                  * spectral;\n\n        col += base * rayPattern;\n        marchT += stepLen;\n    }\n\n    col *= edgeFade(frag, uResolution, uOffset);\n    col *= uIntensity;\n\n    fragColor = vec4(clamp(col, 0.0, 1.0), 1.0);\n}",uniforms:{uResolution:{value:[1,1]},uTime:{value:0},uIntensity:{value:1},uSpeed:{value:1},uAnimType:{value:0},uMouse:{value:[.5,.5]},uColorCount:{value:0},uDistort:{value:0},uOffset:{value:[0,0]},uGradient:{value:c},uNoiseAmount:{value:.8},uRayCount:{value:0}}});C.current=f;var v=new u(r),m=new l(r,{geometry:v,program:f});D.current=v,q.current=m;var resize=function(){var e=n.clientWidth||1,a=n.clientHeight||1;t.setSize(e,a),f.uniforms.uResolution.value=[r.drawingBufferWidth,r.drawingBufferHeight]},d=null;"ResizeObserver"in window?(d=new ResizeObserver(resize)).observe(n):window.addEventListener("resize",resize),resize();var onPointer=function(e){var t=n.getBoundingClientRect(),r=(e.clientX-t.left)/Math.max(t.width,1),a=(e.clientY-t.top)/Math.max(t.height,1);L.current=[Math.min(Math.max(r,0),1),Math.min(Math.max(a,0),1)]};n.addEventListener("pointermove",onPointer,{passive:!0});var h=null;"IntersectionObserver"in window&&(h=new IntersectionObserver(function(n){n[0]&&(O.current=n[0].isIntersecting)},{root:null,threshold:.01})).observe(n);var onVis=function(){};document.addEventListener("visibilitychange",onVis);var y=0,p=performance.now(),g=0,_update=function(n){var e=.001*Math.max(0,n-p);p=n;var r=O.current&&!document.hidden;if(N.current||(g+=e),r){var a=.02+.5*Math.max(0,Math.min(1,I.current)),o=1-Math.exp(-e/a),i=L.current,u=_.current;u[0]+=(i[0]-u[0])*o,u[1]+=(i[1]-u[1])*o,f.uniforms.uMouse.value=u,f.uniforms.uTime.value=g,t.render({scene:q.current}),y=requestAnimationFrame(_update)}else y=requestAnimationFrame(_update)};return y=requestAnimationFrame(_update),function(){var e,t;cancelAnimationFrame(y),n.removeEventListener("pointermove",onPointer),null===(e=d)||void 0===e||e.disconnect(),d||window.removeEventListener("resize",resize),null===(t=h)||void 0===t||t.disconnect(),document.removeEventListener("visibilitychange",onVis);try{n.removeChild(r.canvas)}catch(m){}try{var a,o;null===(a=q.current)||void 0===a||null===(o=a.remove)||void 0===o||o.call(a)}catch(m){}try{var i,u;null===(i=D.current)||void 0===i||null===(u=i.remove)||void 0===u||u.call(i)}catch(m){}try{var l,s;null===(l=C.current)||void 0===l||null===(s=l.remove)||void 0===s||s.call(l)}catch(m){}try{var c,f,v=null===(c=E.current)||void 0===c?void 0:c.gl;v&&null!==(f=z.current)&&void 0!==f&&f.texture&&v.deleteTexture(z.current.texture)}catch(m){}C.current=null,E.current=null,z.current=null,q.current=null,D.current=null}}},[]),t.useEffect(function(){var n,e=null===(n=E.current)||void 0===n||null===(n=n.gl)||void 0===n?void 0:n.canvas;e&&(e.style.mixBlendMode=T&&"none"!==T?T:"")},[T]),t.useEffect(function(){var n=C.current,e=E.current,t=z.current;if(n&&e&&t){n.uniforms.uIntensity.value=null!=s?s:1,n.uniforms.uSpeed.value=null!=f?f:1;n.uniforms.uAnimType.value={rotate:0,rotate3d:1,hover:2}[null!=m?m:"rotate"],n.uniforms.uDistort.value="number"==typeof y?y:0;var r=toPx(null==w?void 0:w.x),a=toPx(null==w?void 0:w.y);n.uniforms.uOffset.value=[r,a],n.uniforms.uRayCount.value=Math.max(0,Math.floor(null!=M?M:0));var o=0;if(Array.isArray(d)&&d.length>0){var i=e.gl,u=d.slice(0,64);o=u.length;for(var l=new Uint8Array(4*o),c=0;c<o;c++){var v=_slicedToArray(hexToRgb01(u[c]),3),h=v[0],p=v[1],g=v[2];l[4*c+0]=Math.round(255*h),l[4*c+1]=Math.round(255*p),l[4*c+2]=Math.round(255*g),l[4*c+3]=255}t.image=l,t.width=o,t.height=1,t.minFilter=i.LINEAR,t.magFilter=i.LINEAR,t.wrapS=i.CLAMP_TO_EDGE,t.wrapT=i.CLAMP_TO_EDGE,t.flipY=!1,t.generateMipmaps=!1,t.format=i.RGBA,t.type=i.UNSIGNED_BYTE,t.needsUpdate=!0}else o=0;n.uniforms.uColorCount.value=o}},[s,f,m,d,y,w,M]),r.jsx("div",{className:"w-full h-full relative overflow-hidden",ref:R})})}}})}();
